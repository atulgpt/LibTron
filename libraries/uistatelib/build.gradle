/*
 * Copyright (C) 2020 Atul Gupta.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-library'
apply plugin: 'kotlin'

apply plugin: 'com.github.dcendents.android-maven'
group='com.github.atulgpt'

// Defining constants
String local_kotlin_version
if (rootProject.hasProperty("kotlin_version")) {
    print "Project sepcified kotlin version = ${rootProject.ext.kotlin_version}"
    local_kotlin_version = rootProject.ext.kotlin_version
} else {
    print "Choosing kotlin version = 1.4.10"
    local_kotlin_version = "1.4.10"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$local_kotlin_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileKotlin {
    kotlinOptions {
        kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
        freeCompilerArgs += "-XXLanguage:+InlineClasses"
        println("[Gradle complier args]" + freeCompilerArgs)
    }
}

kotlin {
    explicitApi = 'strict'
}